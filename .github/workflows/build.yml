name: Build

on:
  push:
    branches:
    - master

jobs:
  github_docker_registry:
    name: GitHub Docker Registry
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Login to Docker registry
      run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      env:
        DOCKER_USERNAME: ${{ github.actor }}
        DOCKER_PASSWORD: ${{ secrets.GPR_TOKEN }}

    - name: Build Docker image
      run: >
        docker build
        --file Dockerfile
        --tag base
        --build-arg GIT_SHA="$GITHUB_SHA"
        --build-arg GOOGLE_ANALYTICS_ID="${{ secrets.GOOGLE_ANALYTICS_ID }}"
        --build-arg YANDEX_METRIKA_ID="${{ secrets.YANDEX_METRIKA_ID }}"
        --build-arg GOOGLE_SITE_VERIFICATION_TOKEN="${{ secrets.GOOGLE_SITE_VERIFICATION_TOKEN }}"
        --build-arg YANDEX_SITE_VERIFICATION_TOKEN="${{ secrets.YANDEX_SITE_VERIFICATION_TOKEN }}"
        --build-arg SENTRY_DSN="${{ secrets.SENTRY_DSN }}"
        .

    - name: Tag Docker image
      run: docker tag base ${DOCKER_IMAGE}:${GITHUB_SHA}
      env:
        DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/resolith

    - name: Push Docker image
      run: docker push ${DOCKER_IMAGE}
      env:
        DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/resolith

  github_pages:
    name: GitHub Pages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm ci --production

      - name: Build application
        run: node_modules/.bin/poi build
        env:
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          YANDEX_METRIKA_ID: ${{ secrets.YANDEX_METRIKA_ID }}
          GOOGLE_SITE_VERIFICATION_TOKEN: ${{ secrets.GOOGLE_SITE_VERIFICATION_TOKEN }}
          YANDEX_SITE_VERIFICATION_TOKEN: ${{ secrets.YANDEX_SITE_VERIFICATION_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Add CNAME file
        run: echo ${{ secrets.PUBLIC_DOMAIN }} >> dist/CNAME

      - name: Deploy
        uses: maxheld83/ghpages@v0.2.1
        env:
          BUILD_DIR: dist/
          GH_PAT: ${{ secrets.GPR_TOKEN }}
